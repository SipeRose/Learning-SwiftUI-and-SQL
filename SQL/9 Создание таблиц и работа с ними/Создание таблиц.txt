CREATE TABLE Books
(
    id     INT,
    title  VARCHAR(40),
    author VARCHAR(40)
);


CREATE TABLE IF NOT EXISTS Books
(
    id     INT,
    title  VARCHAR(40),
    author VARCHAR(40),
    price  INT
);


​CREATE TABLE Books
(
    id     INT NOT NULL,
    title  VARCHAR(40),
    author VARCHAR(40)
);


CREATE TABLE Books
(
    id     INT,
    title  VARCHAR(40) DEFAULT 'Untitled',
    author VARCHAR(40) DEFAULT 'Unknown'
);


CREATE TABLE Books
(
    id        INT,
    title     VARCHAR(40),
    author    VARCHAR(40),
    fulltitle VARCHAR(40) DEFAULT (CONCAT(title, ' by ', author))
);


CREATE TABLE Books
(
    id     INT CHECK (id > 0),
    title  VARCHAR(40),
    author VARCHAR(40)
);


create table Students
(
	id 			int,
    name 		varchar(20),
    surname 	varchar(20),
    age 		int
)



create table Students
(
	id 		int not null unique,
    name 	varchar(20) not null,
    surname varchar(20) not null,
    age 	int default 18
)



create table Students
(
	id 		int not null unique,
    name 	varchar(20) not null,
    surname varchar(20) not null,
    age 	int default 18,
    date_of_receipt date default (curdate())
)



create table Students
(
	id 				int not null unique,
    name 			varchar(20) not null check (char_length(name) > 0),
    surname 		varchar(20) not null check (char_length(surname) > 0),
    age 			int default 18 check (age >= 18),
    date_of_receipt date default (curdate()) check (date_of_receipt >= '2023-09-01')
)


create table Students
(
	id 				int not null unique,
    name 			varchar(20) not null check (char_length(name) > 0),
    surname 		varchar(20) not null check (char_length(surname) > 0),
    age 			int default 18 check (age >= 18),
    date_of_receipt date default (curdate()) check (date_of_receipt >= '2023-09-01'),
    phone_number	varchar(20) check ((phone_number like '7 (___) ___-__-__') or (phone_number like '8 (___) ___-__-__'))
)






CREATE TABLE Books
(
    id     INT PRIMARY KEY,
    title  VARCHAR(40),
    author VARCHAR(40)
)


CREATE TABLE Books
(
    title  VARCHAR(40),
    author VARCHAR(40),
    PRIMARY KEY (title, author)
);


CREATE TABLE Books
(
    id     INT PRIMARY KEY AUTO_INCREMENT,
    title  VARCHAR(40),
    author VARCHAR(40)
);



CREATE TABLE Authors
(
    id      INT PRIMARY KEY AUTO_INCREMENT,
    name    VARCHAR(40),
    surname VARCHAR(40)
);

CREATE TABLE Books
(
    id        INT PRIMARY KEY AUTO_INCREMENT,
    title     VARCHAR(40),
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors (id)
);


CREATE TABLE Authors
(
    id      INT PRIMARY KEY AUTO_INCREMENT,
    name    VARCHAR(40),
    surname VARCHAR(40)
);

CREATE TABLE Books
(
    id        INT PRIMARY KEY AUTO_INCREMENT,
    title     VARCHAR(40),
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors (id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

INSERT INTO Authors (name, surname)
VALUES ('Stephen', 'King'),
       ('Joseph', 'Conrad');
       
INSERT INTO Books (title, author_id)
VALUES ('It', 1),
       ('Heart of Darkness', 2),
       ('Pet Sematary', 1);

UPDATE Authors
SET id = 3
WHERE id = 1;



CREATE TABLE Authors
(
    id      INT PRIMARY KEY AUTO_INCREMENT,
    name    VARCHAR(40),
    surname VARCHAR(40)
);

CREATE TABLE Books
(
    id        INT PRIMARY KEY AUTO_INCREMENT,
    title     VARCHAR(40),
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors (id)
        ON UPDATE SET NULL
        ON DELETE SET NULL
);

INSERT INTO Authors (name, surname)
VALUES ('Stephen', 'King'),
       ('Joseph', 'Conrad');
       
INSERT INTO Books (title, author_id)
VALUES ('It', 1),
       ('Heart of Darkness', 2),
       ('Pet Sematary', 1);

UPDATE Authors
SET id = 3
WHERE id = 1;




CREATE TABLE Authors
(
    id      INT PRIMARY KEY AUTO_INCREMENT,
    name    VARCHAR(40),
    surname VARCHAR(40)
);

CREATE TABLE Books
(
    id        INT PRIMARY KEY AUTO_INCREMENT,
    title     VARCHAR(40),
    author_id INT,
    FOREIGN KEY (author_id) REFERENCES Authors (id)
);

DESCRIBE Books;




create table Students
(
    id       int primary key auto_increment,
    name     varchar(20) check (char_length(name) > 0),
    surname  varchar(20) check (char_length(surname) > 0)
)




create table Students
(
    id       int primary key auto_increment,
    name     varchar(20) check (char_length(name) > 0),
    surname  varchar(20) check (char_length(surname) > 0)
);

create table Classes 
(
    id       int primary key auto_increment,
    name     varchar(20) check (char_length(name) > 0)
)




create table Students
(
	id 		int primary key auto_increment,
    name 	varchar(20) check (char_length(name) > 0),
    surname varchar(20) check (char_length(surname) > 0)
);

create table Classes 
(
	id 		int primary key auto_increment,
    name 	varchar(20) check (char_length(name) > 0)
);

create table Grades
(
	student_id   int,
    class_id     int,
    grade        int check (grade between 1 and 5),
    foreign key (student_id) references Students (id)
		on delete cascade
        on update cascade,
	foreign key (class_id) references Classes (id)
		on update cascade
        on delete cascade,
    primary key (student_id, class_id)
)




DROP TABLE Books;

DROP TABLE IF EXISTS Books;

RENAME TABLE <текущее имя таблицы> TO <новое имя таблицы>

RENAME TABLE Books TO OldBooks;

ALTER TABLE Books
DROP COLUMN author;

ALTER TABLE Books
RENAME COLUMN author TO writer;

ALTER TABLE Books
ADD COLUMN release_year INT CHECK (release_year > 0);

ALTER TABLE Books
ADD COLUMN release_year INT CHECK (release_year > 0) AFTER title;

ALTER TABLE Books
ADD COLUMN release_year INT NOT NULL;

ALTER TABLE Books
MODIFY COLUMN title VARCHAR(60) CHECK (title != '');

ALTER TABLE Books
ALTER COLUMN title SET DEFAULT 'Untitled';

ALTER TABLE Books
ALTER COLUMN title DROP DEFAULT;

ALTER TABLE Books
ADD PRIMARY KEY (id);

ALTER TABLE Books
DROP PRIMARY KEY;

ALTER TABLE Books
ADD COLUMN publisher VARCHAR(40);

ALTER TABLE Books
ADD FOREIGN KEY (publisher) REFERENCES Publishers (name);

ALTER TABLE Books
DROP FOREIGN KEY publisher;

ALTER TABLE Books
ADD CHECK (title != '');

ALTER TABLE Books
ADD CONSTRAINT title_is_not_empty_string CHECK (title != '');

ALTER TABLE Books
DROP CONSTRAINT title_is_not_empty_string;

ALTER TABLE Books
CHANGE COLUMN title name VARCHAR(60) CHECK (name != '');

alter table Students
rename column name to firstname,
rename column surname to lastname,
drop column age


alter table Students
add column hometown varchar(20) not null default 'New York City' after surname

alter table Students
alter column name set default '',
alter column surname set default ''

alter table Students
drop column id,
add primary key (name, surname)

alter table Math
add foreign key (student_id) references Students (id)

alter table Students
add check (char_length(name) >= 2),
add check (char_length(surname) >= 2),
add check (age > 0)



create table Studnets1
(
    id int primary key auto_increment,
    name varchar(20),
    surname varchar(20)
);

insert into Studnets1 (id, name, surname)
select id, substring_index(fullname, ' ', 1), substring_index(fullname, ' ',-1)
from Students; 

truncate Students;

alter table Students
drop column fullname,
add column name varchar(20),
add column surname varchar(20);

insert into Students
select * from Studnets1;

drop table Studnets1;

select * from Students