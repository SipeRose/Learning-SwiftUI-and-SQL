SELECT *
FROM Books INNER JOIN Authors ON Books.author_id = Authors.id;


SELECT Books.id, Authors.id
FROM Books INNER JOIN Authors ON Books.author_id = Authors.id;

SELECT *
FROM BooksRental INNER JOIN Books ON BooksRental.book_id = Books.id
                 INNER JOIN Users ON BooksRental.user_id = Users.id;

SELECT *
FROM Books JOIN Authors ON Books.author_id = Authors.id;

SELECT *
FROM Books, Authors WHERE Books.author_id = Authors.id;

select distinct name as product
from Sales inner join Products on Products.id = product_id

select distinct name as product
from Products inner join Sales on Products.id = product_id
where sale_date = ('2023-09-12')

select name, concat(sum(price), '€') as amount
from Products inner join Sales on Products.id = product_id
group by name


select name as bestseller
from 
(
	select name, count(*)
	from Products inner join Sales on Products.id = product_id
    where sale_date = '2023-09-12'
	group by name
	order by 2 desc
) as OuterTable
limit 1


select name as product
from Products inner join Sales on Products.id = product_id
where sale_date = '2023-09-12'
group by name
having count(*) = 1
order by product


select Sales.id as sale_id, sale_date, Products.name as product, Categories.name as category
from Sales inner join Products on Products.id = product_id
			inner join Categories on category_id = Categories.id


select category
from
(
	select Categories.name as category, sum(price)
	from Categories inner join Products on Categories.id = category_id
					inner join Sales on Products.id = product_id
	group by Categories.name
	order by 2 desc
	limit 1
) as Outside



select t1.name as name
from Employees as t1 inner join Employees as t2 on t1.manager_id = t2.id
where t1.salary > t2.salary






SELECT *
FROM Books LEFT OUTER JOIN Authors ON Books.author_id = Authors.id;


SELECT title,
       IFNULL(author, 'Unknown') AS author
FROM Books LEFT OUTER JOIN Authors ON Books.author_id = Authors.id;



SELECT *
FROM Books RIGHT OUTER JOIN Authors ON Books.author_id = Authors.id;


SELECT Books.*, author
FROM Books
LEFT JOIN Authors ON author_id = Authors.id

select name as product
from Products left join Sales on Products.id = product_id
group by name
having count(product_id) = 0

select name as product, ifnull(
(
	select sale_date
	from Products as InsideTable
	left join Sales on Products.id = product_id
    where name = Products.name
	order by sale_date
    limit 1
), 'Not sold') as first_sale
from Products



select name as product, concat(price * count(product_id), '€') as amount
from Products left join Sales on Products.id = product_id
group by name, price

select name as category, concat(round(ifnull(avg_price, 0), 0), '€') as avg_amount
from Categories left join (
	select Categories.name as category, avg(price) as avg_price
	from Categories left join Products on Categories.id = category_id
					left join Sales on Products.id = product_id
	where not isnull(product_id)
	group by category
) as Second on name = category



SELECT *
FROM Subjects CROSS JOIN Students;

SELECT *
FROM Subjects AS S1 CROSS JOIN Subjects AS S2;

SELECT *
FROM Students CROSS JOIN Subjects;




select MaleStaff.staffer as male_staffer, FemaleStaff.staffer as female_staffer
from MaleStaff cross join FemaleStaff on abs(MaleStaff.age - FemaleStaff.age) < 5
order by male_staffer, female_staffer


select concat(Meals.name, ', ', Drinks.name) as combo, concat(Meals.price + Drinks.price, '€') as price
from Meals cross join Drinks
order by Meals.price + Drinks.price, Meals.name, Drinks.name


select suit, rankvalue
from
(
	select suit, 
	case 
		when suit = 'Spades' then 1
		when suit = 'Clubs' then 2
		when suit = 'Diamonds' then 3
		else 4
		end as rankingSuit, 
	rankvalue, 
	case
			when rankvalue = 'Jack' then round(11, 0)
			when rankvalue = 'Queen' then round(12, 0)
			when rankvalue = 'King' then round(13, 0)
			when rankvalue = 'Ace' then round(14, 0)
			else round(rankvalue, 0)
			end as rankingValue
	from Ranks cross join Suits
	order by rankingSuit, rankingValue
) as OuterTable


select concat('(', S1.x, '; ', S1.y, ')') as p1, concat('(', S2.x, '; ', S2.y, ')') as p2,
round(sqrt((pow(S1.x - S2.x, 2) + pow(S1.y - S2.y, 2))), 1) as distance
from Points as S1 cross join Points as S2 on sqrt((pow(S1.x - S2.x, 2) + pow(S1.y - S2.y, 2))) > 5 and S1.id < S2.id



SELECT id, name, surname
FROM Students

UNION

SELECT id, name, surname
FROM Teachers;




SELECT id, name, surname
FROM Students
WHERE id = 1

UNION

SELECT id, name, surname
FROM Students
WHERE id = 2

UNION

SELECT id, name, surname
FROM Students
WHERE id = 3;





SELECT name AS firstname, surname AS lastname
FROM Students

UNION

SELECT name, surname
FROM Teachers;






SELECT name, surname, age
FROM Students

UNION

SELECT name, surname, subject
FROM Teachers;



SELECT surname
FROM Students

UNION DISTINCT

SELECT surname
FROM Teachers;



SELECT surname
FROM Students

UNION ALL

SELECT surname
FROM Teachers;





(SELECT id, name, surname
FROM Students
LIMIT 1)

UNION

(SELECT id, name, surname
FROM Teachers
LIMIT 1);



(SELECT id, name, surname
FROM Students
ORDER BY id)

UNION

(SELECT id, name, surname
FROM Teachers
ORDER BY id);




SELECT surname
FROM Students

INTERSECT

SELECT surname
FROM Teachers;



SELECT surname
FROM Students

EXCEPT

SELECT surname
FROM Teachers;





select 'Mathematician' as profession, count(*) as total
from Mathematicians

union all

select 'Physicist', count(*)
from Physicists

union all

select 'Programmer', count(*)
from Programmers





select '[0-5)' as session_duration, count(*) as total
from Sessions
where (duration / 60) < 5

union all

select '[5-10)' as session_duration, count(*) as total
from Sessions
where duration / 60 >= 5 and duration / 60 < 10

union all

select '[10-15)' as session_duration, count(*) as total
from Sessions
where duration / 60 >= 10 and duration / 60 < 15

union all

select '15 or more' as session_duration, count(*) as total
from Sessions
where duration / 60 >= 15




select 'bee' as word, count(*) as count
from Files
where (content like '% bee %') or (content like 'bee %') or (content like '% bee') or (content like 'bee')

union

select 'geek', count(*)
from Files
where (content like '% geek %') or (content like 'geek %') or (content like '% geek') or (content like 'geek')





select name, surname
from (
(select name, surname, 1 as third
from Mathematicians)

union

(select name, surname, 2
from Physicists)

union

(select name, surname, 3
from Programmers)

order by third, name desc, surname desc
) as totalTable