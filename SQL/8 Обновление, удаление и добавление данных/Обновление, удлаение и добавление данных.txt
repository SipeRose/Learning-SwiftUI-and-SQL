SET SQL_SAFE_UPDATES = 0;

UPDATE Books
SET price = 9.99;



UPDATE Books
SET price = 9.99,
    amount = 50;

UPDATE Books
SET price = 1.99
WHERE amount = 1;

UPDATE Books
SET price = price * 0.9;


UPDATE Books
SET price = CASE
                WHEN amount < 5 THEN price * 0.9
                WHEN amount BETWEEN 5 AND 10 THEN price * 0.7
                ELSE price * 0.5
            END;

UPDATE Books
SET price = price * 0.5
WHERE author_id = (SELECT id
                   FROM Authors
                   WHERE author = 'Stephen King');



UPDATE Books INNER JOIN Authors ON Books.author_id = Authors.id
SET Books.price = Books.price * 0.5
WHERE Authors.author = 'Stephen King';


UPDATE Books
SET price = price + 2
LIMIT 1;

UPDATE Books
SET id = id + 1
ORDER BY id DESC;

UPDATE IGNORE Books
SET id = id + 1;


UPDATE Books
SET amount = DEFAULT;

SELECT *
FROM Books;

update Grades
set grade = 5


update Grades
set grade = 5
where grade = 4

update Grades
set grade = case grade
				when 'A' then 'Great'
                when 'B' then 'Great'
                when 'C' then 'Well'
                else 'Bad'
                end


update Grades
set grade = 5
where student_id = (select id from Students where student = 'Peter Parker')




update Grades
set grade = 5
where student_id = (select id from Students where student = 'Mary Jane') and 
		class_id = (select id from Classes where name = 'Math')



update Grades
set grade = null
where date_of_receipt = '2023-07-26' and class_id = (select id from Classes where name = 'Biology')


update Grades
set grade = 5
where student_id = (select id from Students where student = 'Gwen Stacy')
order by date_of_receipt 
limit 1;


update Grades
set grade = 5
where student_id = (select id from Students where student = 'Gwen Stacy')
order by date_of_receipt desc
limit 1;



DELETE FROM Books;


DELETE FROM Books
WHERE title = 'Fight Club';

DELETE FROM Books
USING Books INNER JOIN Authors ON Books.author_id = Authors.id
WHERE Authors.author = 'Chuck Palahniuk’;

DELETE FROM Books
ORDER BY id DESC
LIMIT 1;


DELETE FROM Books
WHERE author_id = (SELECT id
                   FROM Authors
                   WHERE author = 'Jerome Salinger');

DELETE FROM Authors
WHERE author = 'Jerome Salinger’;


DELETE IGNORE FROM Authors
WHERE author = 'Jerome Salinger';

TRUNCATE Books


delete from Users
where not id in (select distinct user_id from Purchases)


delete from Purchases
where user_id = (select id from Users where user = 'Matt Damon')
order by id desc
limit 2


delete from Purchases
where user_id = (select id from Users where user = 'Matt Damon');

delete from Users
where user = 'Matt Damon'

delete from Purchases
where film_id in (select id from Films where title like 'Toy S%');

delete from Films
where title like 'Toy S%'



INSERT INTO Books
VALUES (6, 'Animal Farm', 'George Orwell', NULL);


INSERT INTO Books (id, title, author, price)
VALUES (6, 'Animal Farm', 'George Orwell', NULL);


INSERT INTO Books (id, price, author, title)
VALUES (6, 5.99, 'George Orwell', 'Animal Farm');


INSERT INTO Books (id, title, author, price)
VALUES (6, 'Animal Farm', 'George Orwell', NULL),
       (7, 'Lord of the Flies', 'William Golding', 5.99);

INSERT INTO Books (id, title, author, price)
VALUES (6, 'Animal Farm', 'George Orwell', 9.99 * 0.6);


INSERT INTO Books
SET id = 6,
    title = 'Animal Farm',
    author = 'George Orwell',
    price = 9.99;



INSERT INTO Books (id, title, author, price)
SELECT id, title, author, price
FROM NewBooks;



INSERT INTO Books (id, title, author, price)
SELECT (SELECT MAX(id)
        FROM Books) + NewBooks.id,
        title, author, price
FROM NewBooks;


INSERT IGNORE INTO Books (id, title, author, price)
VALUES (1, 'Animal Farm', 'George Orwell', 9.99),
       (6, 'Lord of the Flies', 'William Golding', 5.99);


REPLACE INTO Books (id, title, author, price)
VALUES (1, 'Animal Farm', 'George Orwell', 9.99),
       (6, 'Lord of the Flies', 'William Golding', 5.99);



insert into Songs (id, trackname, artist)
select id + 1, 'Let Me Kiss You', 'Morrissey'
from Songs 
order by id desc 
limit 1;


insert into Songs (id, trackname, artist)
values ((select max(id) from Songs as S1) + 1, 'Running up That Hill', 'Kate Bush'),
	   ((select max(id) from Songs as S1) + 1, 'Thrill', 'The Sounds'),
       ((select max(id) from Songs as S1) + 1, 'Keep Yourself Alive', 'Queen');



insert into MorrisseySongs
select *
from Songs where artist = 'Morrissey';

delete from Songs
where artist = 'Morrissey';


insert into NewSongs
select * from Songs where id in ((select min(id) from Songs), (select max(id) from Songs));


insert into NewSongs
select (select max(id) from NewSongs) + id, trackname, artist
from Songs;